apply plugin: 'java'
apply from: "../../gradle/versioning/versioning.gradle"

dependencies {
  compile project(':metadata-io')
  compile project(':metadata-utils')
  compile project(':metadata-service:auth-impl')
  compile project(':metadata-service:auth-config')
  compile project(':metadata-service:plugin')
  compile project(':metadata-service:configuration')
  compile project(':datahub-graphql-core')
  compile project(':metadata-service:restli-servlet-impl')
  compile project(':metadata-dao-impl:kafka-producer')
  compile project(':ingestion-scheduler')

  compile (externalDependency.awsGlueSchemaRegistrySerde) {
    exclude group: 'org.json', module: 'json'
  }
  compile externalDependency.elasticSearchRest
  compile externalDependency.httpClient
  compile externalDependency.gson
  implementation (externalDependency.hazelcast) {
    exclude group: 'org.json', module: 'json'
  }
  compile externalDependency.hazelcastSpring
  compile externalDependency.kafkaClients
  compile externalDependency.kafkaAvroSerde
  compileOnly externalDependency.lombok
  compile externalDependency.servletApi
  compile externalDependency.springBeans
  compile externalDependency.springBootAutoconfigure
  compile externalDependency.springBootStarterCache
  compile externalDependency.springContext
  compile externalDependency.springCore
  compile externalDependency.springKafka
  compile externalDependency.springWeb
  implementation externalDependency.awsPostgresIamAuth
  implementation externalDependency.awsRds

  annotationProcessor externalDependency.lombok

  compile spec.product.pegasus.restliSpringBridge
  implementation spec.product.pegasus.restliDocgen

  testImplementation externalDependency.springBootTest

  testCompile externalDependency.mockito
  testCompile externalDependency.testng
  testCompile externalDependency.hazelcastTest
  implementation externalDependency.jline
  implementation externalDependency.common
}

configurations.all{
  exclude group: "commons-io", module:"commons-io"
  exclude group: "jline", module:"jline"
}

processResources.configure {
  finalizedBy printVersionDetails // always print version details
}
