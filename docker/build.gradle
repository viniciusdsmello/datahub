plugins {
    id 'java' // required by versioning
}

apply from: "../gradle/versioning/versioning.gradle"

ext {
    quickstart_modules = [
            ':docker:elasticsearch-setup',
            ':docker:mysql-setup',
            ':docker:kafka-setup',
            ':datahub-upgrade',
            ':metadata-jobs:mce-consumer-job',
            ':metadata-jobs:mae-consumer-job',
            ':metadata-service:war',
            ':datahub-frontend',
    ]
    debug_modules = quickstart_modules - [':metadata-jobs:mce-consumer-job',
                                          ':metadata-jobs:mae-consumer-job']
    debug_compose_args = [
            '-f', 'docker-compose-without-neo4j.yml',
            '-f', 'docker-compose-without-neo4j.override.yml',
            '-f', 'docker-compose-without-neo4j.m1.yml', // updates to mariadb
            '-f', 'docker-compose.dev.yml'
    ]
    debug_reloadable = [
            'datahub-gms',
            'datahub-frontend-react'
    ]
}

task quickstart(type: Exec, dependsOn: ':metadata-ingestion:install') {
    dependsOn(quickstart_modules.collect { it + ':dockerTag' })
    shouldRunAfter ':metadata-ingestion:clean', 'quickstartNuke'

    environment "DATAHUB_TELEMETRY_ENABLED", "false"
    environment "DOCKER_COMPOSE_BASE", "file://${rootProject.projectDir}"
    environment "ACTIONS_VERSION", 'alpine3.17-slim'
    environment "DATAHUB_ACTIONS_IMAGE", 'nginx'

    def cmd = [
            'source ../metadata-ingestion/venv/bin/activate && ',
            'datahub docker quickstart',
            '--no-pull-images',
            '--standalone_consumers',
            '--version', "v${version}",
            '--dump-logs-on-failure'
    ]

    commandLine 'bash', '-c', cmd.join(" ")
}

task quickstartNuke(type: Exec, dependsOn: ":metadata-ingestion:install") {
    shouldRunAfter(':metadata-ingestion:clean')

    def cmd = [
            'source ../metadata-ingestion/venv/bin/activate && ',
            'datahub docker nuke'
    ]
    commandLine 'bash', '-c',  cmd.join(" ")
}

task quickstartDebug(type: Exec, dependsOn: ':metadata-ingestion:install') {
    dependsOn(debug_modules.collect { it + ':dockerTagDebug' })
    shouldRunAfter ':metadata-ingestion:clean', 'quickstartNuke'

    environment "DATAHUB_TELEMETRY_ENABLED", "false"
    environment "DOCKER_COMPOSE_BASE", "file://${rootProject.projectDir}"

    def cmd = [
            'source ../metadata-ingestion/venv/bin/activate && ',
            'datahub docker quickstart',
            '--no-pull-images',
            '--version', "debug",
            '--dump-logs-on-failure'
    ] + debug_compose_args
    commandLine 'bash', '-c', cmd.join(" ")
}

task debugReload(type: Exec) {
    def cmd = ['docker compose -p datahub'] + debug_compose_args + ['restart'] + debug_reloadable
    commandLine 'bash', '-c', cmd.join(" ")
}
